language: c++
compiler: gcc
sudo: false
matrix:
  include:
# fully specify builds, include can't dynamically expand matrix entries
# relative order of sudo and env is important so that addons: is recognized
    - os: linux
      sudo: required
      dist: trusty
      env: TARGET="linux"
      addons:
        apt:
          packages:
          - libxrandr-dev
          - libxinerama-dev
          - libx11-dev
          - libxcursor-dev
          - libxi-dev
    - os: linux
      sudo: required
      dist: trusty
      env: TARGET="linux" OPT="gcc5"
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - gcc-5
          - g++-5
          - libstdc++-5-dev
          - libxrandr-dev
          - libxinerama-dev
          - libx11-dev
          - libxcursor-dev
          - libxi-dev
    - os: linux
      sudo: false
      env: TARGET="android" OPT="armv7"
      addons:
        apt:
          packages:
          - xutils-dev
      cache:
        directories:
        - ~/android-ndk-r10e
        - apothecary/build/Toolchains/armv7
    - os: linux
      sudo: false
      env: TARGET="android" OPT="x86"
      addons:
        apt:
          packages:
          - xutils-dev
      cache:
        directories:
        - ~/android-ndk-r10e
        - apothecary/build/Toolchains/x86
    - os: linux
      sudo: required
      dist: trusty
      env: TARGET="linuxarmv6l" SYSROOT="$TRAVIS_BUILD_DIR/scripts/$TARGET/raspbian" TOOLCHAIN_ROOT="$TRAVIS_BUILD_DIR/scripts/$TARGET/rpi_toolchain" TOOLCHAIN_PREFIX=arm-linux-gnueabihf
    - os: osx
      compiler: clang
      env: TARGET="osx"
    - os: osx
      osx_image: xcode7.1
      compiler: clang
      env: TARGET="ios"
  exclude:
    - compiler: gcc
install:
    - if [ "$TARGET" == "android" ] || [ "$TARGET" == "linux" ] || [ "$TARGET" == "linuxarmv6l" ]; then
        scripts/$TARGET/install.sh;
      fi
script:
    - scripts/build.sh $OPT
git:
    depth: 10
